[
  {
    "bookSourceComment": "//图片解密 by.河鹅和\n//2025.2.20 by.◎辞晨◎",
    "bookSourceName": "韩国漫画：河",
    "bookSourceType": 2,
    "bookSourceUrl": "https://hanmm.org/#防",
    "customOrder": -99811,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nsort=[];\npush=(title,url,type1,type2)=>sort.push({\n\t\ttitle: title,\n\t\turl: url,\n\t\tstyle: {\n\t\t\t\tlayout_flexGrow: type1,\n\t\t\t\tlayout_flexBasisPercent: type2\n\t\t\t}\n\t});\npush(\"全部🌊分类\",null,1,1)\n  mrList=[[\"全部状态\",\"\"],[\"连载\",\"lianzai\"],[\"全本\",\"quanben\"]]\n\tarList=[[\"🌊韩漫🌊\",\"webtoon\"],[\"🌊台漫🌊\",\"webtoom\"],[\"🌊3D🌊\",\"webthreed\"],[\"🌊同人🌊\",\"webtr\"],[\"🌊真人🌊\",\"webzr\"],[\"🌊Cos🌊\",\"webcos\"],[\"🌊出版🌊\",\"webcb\"]]\n\tnrList=[\"默认排序\",\"更新时间\",\"总推荐\",\"总催更\",\"总收藏\"]\n\tarList.map(([tag,uri])=>{\n\t\turl=`/sort/${uri}/0/{{page}}/1/`;\n\t\tpush(tag, url, 1, 1);\n\tmrList.map(([teg,ure])=>{\n\t\tpush(teg,`${ure}/sort/${uri}/0/{{page}}/1/`,1,0.25)\n\t\t\t});\n\t\t   nrList.map((trg,urt)=>{\n\t\t   mrList.map(([teg,ure])=>{\n   \tpush(trg,`${ure}/sort/${uri}/0/{{page}}/${urt+1}/`,1,0.25)\n\t\t});\n\t\t});\n\t\t});\n//java.log(JSON.stringify(sort))\nJSON.stringify(sort)",
    "header": "'User-Agent': \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36\"",
    "jsLib": "function toDataUrl(key) {\n\treturn `data:image/.jpg#;base64,${this.java.base64Encode(key)},{'type':'jpg'}`\n}\nvar Magua = new JavaImporter();\nMagua.importPackage(\n\tPackages.java.io,\n\tPackages.android.graphics\n);\nwith(Magua) {\n\tfunction decodeImg(picBytes, restoreOrder) {\n\t\tvar img = BitmapFactory.decodeByteArray(picBytes, 0, picBytes.length);\n\t\tvar imageHeight = img.getHeight();\n\t\tvar imageWidth = img.getWidth();\n\t\tvar newImg = Bitmap.createBitmap(imageWidth, imageHeight, Bitmap.Config.ARGB_8888);\n\t\tlet canvas = new Canvas(newImg);\n\t\tconst keys = Object.keys(restoreOrder);\n\t\tconst num = keys.length;\n\t\tlet blockWidth, blockHeight, extraPixels;\n\t\tif (num % 2 === 0) {\n\t\t\tblockWidth = Math.floor(imageWidth / num);\n\t\t\textraPixels = imageWidth % num;\n\t\t} else {\n\t\t\tblockHeight = Math.floor(imageHeight / num);\n\t\t\textraPixels = imageHeight % num;\n\t\t}\n\t\tconst blocks = [];\n\t\tlet startX = 0;\n\t\tlet startY = 0;\n\n\t\tkeys.forEach((key, index) => {\n\t\t\tconst originalPosition = restoreOrder[key];\n\t\t\tif (originalPosition >= 0 && originalPosition < num) {\n\t\t\t\tif (num % 2 === 0) {\n\t\t\t\t\tconst currentBlockWidth = blockWidth + (originalPosition < extraPixels ? 1 : 0);\n\t\t\t\t\tblocks[originalPosition] = Bitmap.createBitmap(img, startX, 0, currentBlockWidth, imageHeight);\n\t\t\t\t\tstartX += currentBlockWidth;\n\t\t\t\t} else {\n\t\t\t\t\tconst currentBlockHeight = blockHeight + (originalPosition < extraPixels ? 1 : 0);\n\t\t\t\t\tblocks[originalPosition] = Bitmap.createBitmap(img, 0, startY, imageWidth, currentBlockHeight);;\n\t\t\t\t\tstartY += currentBlockHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.java.log(`Invalid originalPosition: ${originalPosition}`);\n\t\t\t}\n\t\t});\n\t\tstartX = 0;\n\t\tstartY = 0;\n\t\tObject.keys(blocks)\n\t\t\t.sort((a, b) => a - b)\n\t\t\t.forEach(key => {\n\t\t\t\tconst block = blocks[key];\n\t\t\t\tif (num % 2 === 0) {\n\t\t\t\t\tconst currentBlockWidth = block.getWidth();\n\t\t\t\t\tcanvas.drawBitmap(block, startX, 0, null);\n\t\t\t\t\tstartX += currentBlockWidth;\n\t\t\t\t} else {\n\t\t\t\t\tconst currentBlockHeight = block.getHeight();\n\t\t\t\t\tcanvas.drawBitmap(block, 0, startY, null);\n\t\t\t\t\tstartY += currentBlockHeight;\n\t\t\t\t}\n\t\t\t});\n\t\tvar newbit = new ByteArrayOutputStream();\n\t\tnewImg.compress(Bitmap.CompressFormat.PNG, 100, newbit);\n\t\treturn newbit.toByteArray()\n\t}\n}",
    "lastUpdateTime": 1740054286730,
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "[property=\"og:comic:author\"]@content",
      "coverUrl": "[property=\"og:image\"]@content",
      "intro": "",
      "kind": "[property~=category|status|update_time]@content##\\s.*",
      "lastChapter": "[property~=las?test_chapter_name]@content",
      "name": "[property=\"og:title\"]@content",
      "tocUrl": "",
      "wordCount": "a.0[href~=read]@text"
    },
    "ruleContent": {
      "content": "@js:\neval(\"data=\" + src.match(/data:\\s*(\\{[^\\}]+\\})/)[1])\nbody = Object.keys(data).map(key => `${key}=${data[key]}`).join('&');\n//java.log(body)\nresult = java.ajax(`https://hanmm.org/api/reader_js.php,{\"body\": \"${body}\",\"method\": \"POST\"}`)\nif (/[\\u4e00-\\u9fa5]/.test(result)) {\n\tresult\n} else {\n\tdata = JSON.parse(result)\n\timageList = data.data.image_list\n\timageList.sort((a, b) => a.order - b.order)\n\timageList.map(img => {\n\t\treturn `<img src=\"${toDataUrl(JSON.stringify(img))}\">`\n\t}).join(\"\\n\")\n}",
      "imageDecode": "json=java.bytesToStr(result)\n//java.log(json)\nimg=JSON.parse(json)\nresult=java.hexDecodeToByteArray(java.ajax(`${img.pic},{\"type\": \"jpg\",\"headers\": {\"Referer\": \"https://hanmm.org/\"}}`))\nif (img.arr==\"\"){\n\tresult\n}else{\tarr=JSON.parse(java.base64Decode(img.arr))\n\tresult=decodeImg(result,arr)\n}\nresult"
    },
    "ruleExplore": {
      "author": ".li_bottom@a.0@text",
      "bookList": "ul@li",
      "bookUrl": "a.0@href",
      "coverUrl": "img@data-original",
      "intro": ".indent@text",
      "kind": "{{@@em@text}},{{@@.full@text## / ##,}}",
      "name": "h2@text"
    },
    "ruleSearch": {
      "author": "a.2@text",
      "bookList": "ul@li",
      "bookUrl": "a.0@href",
      "coverUrl": "img@data-original",
      "kind": "{{@@span.0@text## / ##,}},{{@@.s_gray@text##图##图,}}",
      "lastChapter": "p.-1@text",
      "name": "h3@text"
    },
    "ruleToc": {
      "chapterList": "#ul_all_chapters.0@li@a",
      "chapterName": "text",
      "chapterUrl": "href",
      "formatJs": ""
    },
    "searchUrl": "{{cookie.removeCookie(source.key)}}/search/,{\n  \"body\": \"searchkey={{key}}&searchtype=all&Submit=\",\n  \"method\": \"POST\"\n}",
    "weight": 0
  }
]